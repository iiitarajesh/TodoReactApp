{"version":3,"sources":["logo.svg","components/Demo.js","components/Demo1.js","components/Child.js","components/Parent.js","components/Sample.js","components/AddToDo.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Demo","Component","Demo1","props","Title","Child","this","Parent","Sample","state","a","handleButtonClick","console","log","setState","type","onClick","AddTodo","Id","Status","handleIdChange","event","target","value","handleTitleChange","handleStatusChange","handleToDoSubmit","preventDefault","onAdd","onSubmit","className","onChange","placeholder","TodoList","todos","deleteToDo","todo","filteredItems","filter","x","addToDo","editToDo","map","key","style","color","icon","library","add","faTrash","faEdit","faPlus","App","src","logo","alt","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.00e5f792.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\n\r\nexport  class Demo extends Component {\r\n    render() {\r\n       return (\r\n           <div>\r\n               <h1>Hello World</h1>\r\n               <h2>Rajesh Kumar</h2>\r\n           </div>\r\n       );\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\n\r\n// function Demo1() {\r\n//     return (\r\n//         <div>\r\n//            <h1>Hello From function Component</h1>    \r\n//         </div>\r\n//     );\r\n// }\r\n\r\nconst Demo1 = (props) => {\r\n    return (\r\n       <div>\r\n          <h1>Hello From function Component1</h1>\r\n          <h2>{props.Title}</h2>\r\n       </div>\r\n    );\r\n}\r\n\r\n// const Demo1 = () => (\r\n//     <div>\r\n//        <h1>Hello From function Component</h1>\r\n//     <h2>{props.Title}</h2>\r\n//     </div>\r\n// );\r\n\r\nexport default Demo1;","import React, { Component } from 'react';\r\n\r\nexport default class Child extends Component {\r\nrender() {\r\n    return (\r\n      <div>\r\n          <h3>I am Child Component</h3>\r\n          <h3>{this.props.Title}</h3>\r\n      </div>\r\n    );\r\n }\r\n}","import React, { Component } from 'react';\r\nimport Child from './Child';\r\nimport Demo1 from './Demo1';\r\nexport default class Parent extends Component {\r\nrender() {\r\n    return (\r\n      <div>\r\n          <h1>I am parent Component</h1>\r\n          <Child Title=\"I am text from Parent Component\"></Child>\r\n          <Demo1 Title=\"I am Text for function Component\" ></Demo1>\r\n      </div>\r\n    );\r\n }\r\n}","import React, {Component} from \"react\";\r\n\r\nexport default class Sample extends Component{\r\n    state = {\r\n        a:'Hello'\r\n    }\r\n\r\n    handleButtonClick = () => {\r\n        console.log(\"Inside Button Click\");\r\n        // this.state.a = \"You pressed Button\";\r\n        this.setState({\r\n            a: \"you clicked Button\"\r\n        });\r\n     };\r\n\r\n     \r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>{this.state.a}</h1>\r\n                <button type=\"button\" onClick={this.handleButtonClick} >Click Me</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nexport default class AddTodo extends Component {\r\n    state = {\r\n        Id: \"\",\r\n        Title: \"\",\r\n        Status: \"Pending\"\r\n    };\r\n    handleIdChange = (event) => {\r\n        this.setState({\r\n            Id: event.target.value\r\n        });\r\n    };\r\n    handleTitleChange = (event) => {\r\n        this.setState({\r\n            Title: event.target.value\r\n        });\r\n    }\r\n    handleStatusChange = (event) => {\r\n        this.setState({\r\n            Status: event.target.value\r\n        });\r\n    };\r\n    handleToDoSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAdd({\r\n            Id: this.state.Id,\r\n            Title: this.state.Title,\r\n            Status: this.state.Status\r\n        });\r\n        this.setState({\r\n            Id: \"\",\r\n            Title: \"\",\r\n            Status: \"Pending\"\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>\r\n                    Add ToDo\r\n                </h3>\r\n                <form onSubmit={this.handleToDoSubmit} >\r\n                    <div className=\"form-group\" >\r\n                        <input value={this.state.Id} onChange={this.handleIdChange} className=\"form-control\" placeholder=\"Enter Id\" />\r\n                    </div>\r\n                    <div className=\"form-group\" >\r\n                        <input value={this.state.Title} onChange={this.handleTitleChange} className=\"form-control\" placeholder=\"Enter Title\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select value={this.state.Status} onChange={this.handleStatusChange} className=\"form-control\" >\r\n                            <option value=\"Done\" >Done</option>\r\n                            <option value=\"Pending\" >Pending</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"form-control btn btn-primary\" >Add Todo</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AddTodo from './AddToDo';\r\n\r\nexport default class TodoList extends Component {\r\n  state = {\r\n    todos: [\r\n      { Id: \"1\", Title: \"Push your code to github\", Status: \"Done\" },\r\n      { Id: \"2\", Title: \"Email to your manager\", Status: \"Pending\" },\r\n    ],\r\n  };\r\n\r\n  deleteToDo = (todo) => {\r\n    const filteredItems = this.state.todos.filter((x) => x.Id !== todo.Id);\r\n    this.setState({\r\n      todos: filteredItems,\r\n    });\r\n  };\r\n\r\n  addToDo = (todo) => {\r\n    this.setState({\r\n        todos: [...this.state.todos, todo]\r\n    });\r\n};\r\n  editToDo = (x) => {\r\n    this.setState((state) => ({\r\n      todos: state.todos.map((todo) => {\r\n        if (todo.Id === x.Id) {\r\n          return {\r\n            ...todo,\r\n            Status: todo.Status === \"Done\" ? \"Pending\" : \"Done\",\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      }),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <AddTodo onAdd={this.addToDo}></AddTodo>\r\n        <h1>TodoList </h1>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Title</th>\r\n              <th>Status</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.todos.map((x) => {\r\n              return (\r\n                <tr key={x.Id}>\r\n                  <td>{x.Id}</td>\r\n                  <td>{x.Title}</td>\r\n                  <td style={{ color: x.Status === \"Done\" ? \"green\" : \"red\" }}>{x.Status}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => this.deleteToDo(x)}\r\n                    >\r\n                      <span>\r\n                        <FontAwesomeIcon icon=\"trash\"></FontAwesomeIcon>\r\n                      </span>\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => this.editToDo(x)}\r\n                    >\r\n                      <span>\r\n                        <FontAwesomeIcon icon=\"edit\"></FontAwesomeIcon>\r\n                      </span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash, faPlus, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { Demo } from './components/Demo';\nimport Demo1 from './components/Demo1';\nimport Parent from './components/Parent';\nimport Sample from './components/Sample';\nimport TodoList from './components/TodoList';\nimport logo from './logo.svg';\nimport './App.css';\nlibrary.add(faTrash, faEdit, faPlus);\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <p>Tejas Arul</p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <h1>App Components</h1>\n        <TodoList></TodoList>\n        <Demo></Demo>\n        <Demo1></Demo1>\n        <Parent></Parent>\n        <Sample></Sample>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}